<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.feiyang.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.example.feiyang.entity.Order" >
    <id column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="staff_id" property="staffId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="receive_time" property="receiveTime" jdbcType="TIMESTAMP" />
    <result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
    <result column="buy_time" property="buyTime" jdbcType="TIMESTAMP" />
    <result column="device_type" property="deviceType" jdbcType="VARCHAR" />
    <result column="device_brand" property="deviceBrand" jdbcType="VARCHAR" />
    <result column="device_version" property="deviceVersion" jdbcType="VARCHAR" />
    <result column="repair_type" property="repairType" jdbcType="VARCHAR" />
    <result column="repair_instruction" property="repairInstruction" jdbcType="VARCHAR" />
    <result column="repair_image" property="repairImage" jdbcType="VARCHAR" />
    <result column="guarantee_status" property="guaranteeStatus" jdbcType="VARCHAR" />
    <result column="cancel_reason" property="cancelReason" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, user_id, staff_id, create_time, receive_time, close_time, buy_time, device_type, 
    device_brand, device_version, repair_type, repair_instruction, repair_image, guarantee_status, 
    cancel_reason, status
  </sql>
  <sql id="query_for" >
    order_id, fy_order.create_time, receive_time, close_time, buy_time, device_type,
    device_brand, device_version, repair_type, repair_instruction, repair_image, guarantee_status,
    cancel_reason, status
  </sql>
  <sql id="user" >
    user.user_id user_user_id,user.username user_username, user.qq_number user_qq_number, user.phone_number user_phone_number,
    user.is_vip user_is_vip, user.is_ban user_is_ban, user.session_id user_session_id, user.code user_code,
    user.email user_email,user.vip_id user_vip_id, user.init user_init, user.create_time user_create_time,
    user.avatar_url user_avatar_url, user.rest_repair_chance user_rest_repair_chance
  </sql>
  <sql id="staff" >
    staff.user_id staff_id,staff.username staff_username, staff.qq_number staff_qq_number, staff.phone_number staff_phone_number,
    staff.is_vip staff_is_vip, staff.is_ban staff_is_ban, staff.session_id staff_session_id, staff.code staff_code,
    staff.email staff_email,staff.vip_id staff_vip_id, staff.init staff_init, staff.create_time staff_create_time,
    staff.avatar_url staff_avatar_url, staff.rest_repair_chance staff_rest_repair_chance
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.feiyang.entity.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fy_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fy_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <select id="selectOrderRows" resultType="int">
    select count(order_id) from fy_order
    <where>
      <if test="userId != null">
        user_id = #{userId}
      </if>
      <if test="staffId != null">
        staff_id = #{staffId}
      </if>
    </where>
  </select>
  <select id="queryOrderRowsForAdmin" resultType="int">
    select count(order_id)
    from fy_order
    <if test="staffName != null">
      join fy_user staff
      on staff.user_id = fy_order.staff_id
    </if>
    <if test="userName != null">
      join fy_user user
      on user.user_id = fy_order.user_id
    </if>
    <trim prefix="where" suffixOverrides="and">
      <if test="repairType != null">
        repair_type = #{repairType} and
      </if>
      <if test="status != null">
        status = #{status} and
      </if>
      <if test="staffName != null">
        staff.username = #{staffName} and
      </if>
      <if test="userName != null">
        user.username = #{userName}
      </if>
    </trim>
  </select>
  <select id="selectAll" resultType="Map">
    select <include refid="query_for"></include>,
    <trim suffixOverrides=",">
      <if test="userId == null">
        <include refid="user"></include>,
      </if>
      <if test="staffId == null">
        <include refid="staff"></include>
      </if>
    </trim>
    from fy_order
    <if test="staffId == null">
      left join fy_user staff
      on staff.user_id = fy_order.staff_id
    </if>
    <if test="userId == null">
      inner join fy_user user
      on user.user_id = fy_order.user_id
    </if>
    <trim prefix="where">
      <if test="userId != null">
        fy_order.user_id = #{userId}
      </if>
      <if test="staffId != null">
        fy_order.staff_id = #{staffId}
      </if>
    </trim>
    limit #{offset},#{limit}
  </select>
  <select id="selectForAdmin" resultType="Map">
    select <include refid="query_for"></include>,<include refid="user"></include>,<include refid="staff"></include>
    from fy_order
    left join fy_user staff
    on staff.user_id = fy_order.staff_id
    join fy_user user
    on user.user_id = fy_order.user_id
    <trim prefix="where" suffixOverrides="and">
      <if test="repairType != null">
        repair_type = #{repairType} and
      </if>
      <if test="status != null">
        status = #{status} and
      </if>
      <if test="staffName != null">
        staff.username = #{staffName} and
      </if>
      <if test="userName != null">
        user.username = #{userName}
      </if>
    </trim>
    limit #{offset},#{limit}
  </select>
  <select id="getSomeRows" resultType="int">
    select count(order_id) from fy_order
    <if test="start != null and end != null">
      where create_time between #{start} and #{end}
    </if>
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from fy_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.feiyang.entity.OrderExample" >
    delete from fy_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.feiyang.entity.Order" useGeneratedKeys="true" keyProperty="orderId">
    insert into fy_order (order_id, user_id, staff_id, 
      create_time, receive_time, close_time, 
      buy_time, device_type, device_brand, 
      device_version, repair_type, repair_instruction, 
      repair_image, guarantee_status, cancel_reason, 
      status)
    values (#{orderId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{staffId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{receiveTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP}, 
      #{buyTime,jdbcType=TIMESTAMP}, #{deviceType,jdbcType=VARCHAR}, #{deviceBrand,jdbcType=VARCHAR}, 
      #{deviceVersion,jdbcType=VARCHAR}, #{repairType,jdbcType=VARCHAR}, #{repairInstruction,jdbcType=VARCHAR}, 
      #{repairImage,jdbcType=VARCHAR}, #{guaranteeStatus,jdbcType=VARCHAR}, #{cancelReason,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.feiyang.entity.Order" >
    insert into fy_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="receiveTime != null" >
        receive_time,
      </if>
      <if test="closeTime != null" >
        close_time,
      </if>
      <if test="buyTime != null" >
        buy_time,
      </if>
      <if test="deviceType != null" >
        device_type,
      </if>
      <if test="deviceBrand != null" >
        device_brand,
      </if>
      <if test="deviceVersion != null" >
        device_version,
      </if>
      <if test="repairType != null" >
        repair_type,
      </if>
      <if test="repairInstruction != null" >
        repair_instruction,
      </if>
      <if test="repairImage != null" >
        repair_image,
      </if>
      <if test="guaranteeStatus != null" >
        guarantee_status,
      </if>
      <if test="cancelReason != null" >
        cancel_reason,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTime != null" >
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyTime != null" >
        #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceType != null" >
        #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceBrand != null" >
        #{deviceBrand,jdbcType=VARCHAR},
      </if>
      <if test="deviceVersion != null" >
        #{deviceVersion,jdbcType=VARCHAR},
      </if>
      <if test="repairType != null" >
        #{repairType,jdbcType=VARCHAR},
      </if>
      <if test="repairInstruction != null" >
        #{repairInstruction,jdbcType=VARCHAR},
      </if>
      <if test="repairImage != null" >
        #{repairImage,jdbcType=VARCHAR},
      </if>
      <if test="guaranteeStatus != null" >
        #{guaranteeStatus,jdbcType=VARCHAR},
      </if>
      <if test="cancelReason != null" >
        #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.feiyang.entity.OrderExample" resultType="java.lang.Integer" >
    select count(*) from fy_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fy_order
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.staffId != null" >
        staff_id = #{record.staffId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receiveTime != null" >
        receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.closeTime != null" >
        close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buyTime != null" >
        buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deviceType != null" >
        device_type = #{record.deviceType,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceBrand != null" >
        device_brand = #{record.deviceBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceVersion != null" >
        device_version = #{record.deviceVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.repairType != null" >
        repair_type = #{record.repairType,jdbcType=VARCHAR},
      </if>
      <if test="record.repairInstruction != null" >
        repair_instruction = #{record.repairInstruction,jdbcType=VARCHAR},
      </if>
      <if test="record.repairImage != null" >
        repair_image = #{record.repairImage,jdbcType=VARCHAR},
      </if>
      <if test="record.guaranteeStatus != null" >
        guarantee_status = #{record.guaranteeStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelReason != null" >
        cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fy_order
    set order_id = #{record.orderId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      staff_id = #{record.staffId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      device_type = #{record.deviceType,jdbcType=VARCHAR},
      device_brand = #{record.deviceBrand,jdbcType=VARCHAR},
      device_version = #{record.deviceVersion,jdbcType=VARCHAR},
      repair_type = #{record.repairType,jdbcType=VARCHAR},
      repair_instruction = #{record.repairInstruction,jdbcType=VARCHAR},
      repair_image = #{record.repairImage,jdbcType=VARCHAR},
      guarantee_status = #{record.guaranteeStatus,jdbcType=VARCHAR},
      cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.feiyang.entity.Order" >
    update fy_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveTime != null" >
        receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyTime != null" >
        buy_time = #{buyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceType != null" >
        device_type = #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceBrand != null" >
        device_brand = #{deviceBrand,jdbcType=VARCHAR},
      </if>
      <if test="deviceVersion != null" >
        device_version = #{deviceVersion,jdbcType=VARCHAR},
      </if>
      <if test="repairType != null" >
        repair_type = #{repairType,jdbcType=VARCHAR},
      </if>
      <if test="repairInstruction != null" >
        repair_instruction = #{repairInstruction,jdbcType=VARCHAR},
      </if>
      <if test="repairImage != null" >
        repair_image = #{repairImage,jdbcType=VARCHAR},
      </if>
      <if test="guaranteeStatus != null" >
        guarantee_status = #{guaranteeStatus,jdbcType=VARCHAR},
      </if>
      <if test="cancelReason != null" >
        cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.feiyang.entity.Order" >
    update fy_order
    set user_id = #{userId,jdbcType=BIGINT},
      staff_id = #{staffId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      buy_time = #{buyTime,jdbcType=TIMESTAMP},
      device_type = #{deviceType,jdbcType=VARCHAR},
      device_brand = #{deviceBrand,jdbcType=VARCHAR},
      device_version = #{deviceVersion,jdbcType=VARCHAR},
      repair_type = #{repairType,jdbcType=VARCHAR},
      repair_instruction = #{repairInstruction,jdbcType=VARCHAR},
      repair_image = #{repairImage,jdbcType=VARCHAR},
      guarantee_status = #{guaranteeStatus,jdbcType=VARCHAR},
      cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>